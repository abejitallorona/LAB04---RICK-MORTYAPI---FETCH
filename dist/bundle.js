(()=>{"use strict";var n={83:(n,t,e)=>{e.d(t,{A:()=>s});var r=e(601),o=e.n(r),i=e(314),a=e.n(i)()(o());a.push([n.id,"#main-card {\n    background: rgba(255, 255, 255, 0.2); \n    border-radius: 20px;\n    box-shadow: 0 4px 10px rgba(83, 2, 2, 0.2); /* Sombra más suave y visible */\n    padding: 25px;\n    margin: 10px;\n    max-width: 300px;\n    transition: transform 0.3s ease; \n  }\n  \n\n  \n  .image-container img {\n    box-shadow: 0 4px 10px rgba(83, 2, 2, 0.2); /* Sombra más suave y visible */\n\n    width: 100%;\n    border-radius: 12px;\n    max-height: 150px;\n  }\n  \n.image-container:hover {\n  transform: scale(1.05);\n  transition: ease-in-out 0.5ms;\n}\n\n  .info-container {\n    margin-top: 10px;\n  }\n  \n  .info-container h1 {\n    color: rgb(94, 24, 68);\n    display: flex;\n    justify-content: center;\n    font-size: 18px;\n    margin-bottom: 5px;\n  }\n  \n  .info-container p {\n    font-size: 14px;\n    color: rgb(56, 37, 49);\n  }\n  ",""]);const s=a},647:(n,t,e)=>{e.d(t,{A:()=>s});var r=e(601),o=e.n(r),i=e(314),a=e.n(i)()(o());a.push([n.id,"body {\n    margin: 0;\n    padding: 0;\n    background-color: #333; /* Fondo gris oscuro */\n    font-family: Arial, sans-serif;\n  }\n  \n  #container {\n    display: flex;\n    flex-wrap: wrap; /* Permite que las cards hagan wrap cuando no caben en una fila */\n    justify-content: center; \n    gap: 15px;\n    padding: 20px;\n  }\n  \n  h1 {\n    color: #fff;\n    text-align: center;\n    width: 100%; /* Asegura que el título ocupe toda la fila */\n  }\n  \n\n  #main-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    padding: 20px;\n}\n\n#input-container {\n    text-align: center;\n    margin-bottom: 20px;\n    border-color: transparent;\n}\n\n.card-input {\n  background-color: #f4e3ef;\n  border-color: transparent;\n  border-radius: 8px;\n  padding: 8px;\n}\n\n.card-input input {\n  padding: 20px;\n}\n\n.card-button {\n  background-color: rgb(150, 33, 111);\n  color: #fff;\n  border-radius: 12px;\n  border-color: antiquewhite;\n  padding: 8px;\n  border-radius: 8px;\n  cursor: pointer;\n}\n\n.card-button:hover {\n  background-color: antiquewhite;\n  color: rgb(113, 34, 91);\n  transition: ease-in 12  ms;\n}\n\n#cardsContainer {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    gap: 20px;\n    width: 100%;\n}\n\nh1 {\n    color: rgb(151, 17, 100);\n    font-size: 40px;\n    font-family: fantasy;\n    text-align: center;\n    width: 100%;\n}",""]);const s=a},314:n=>{n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e="",r=void 0!==t[5];return t[4]&&(e+="@supports (".concat(t[4],") {")),t[2]&&(e+="@media ".concat(t[2]," {")),r&&(e+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),e+=n(t),r&&(e+="}"),t[2]&&(e+="}"),t[4]&&(e+="}"),e})).join("")},t.i=function(n,e,r,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(a[c]=!0)}for(var d=0;d<n.length;d++){var p=[].concat(n[d]);r&&a[p[0]]||(void 0!==i&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=i),e&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=e):p[2]=e),o&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=o):p[4]="".concat(o)),t.push(p))}},t}},601:n=>{n.exports=function(n){return n[1]}}},t={};function e(r){var o=t[r];if(void 0!==o)return o.exports;var i=t[r]={id:r,exports:{}};return n[r](i,i.exports,e),i.exports}e.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},e.d=(n,t)=>{for(var r in t)e.o(t,r)&&!e.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:t[r]})},e.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t);var r,o=e(83);!function(n){n.image="image",n.name="name",n.status="status",n.species="species",n.type="type",n.origin="origin",n.nameoffirstepisode="nameoffirstepisode"}(r||(r={}));class i extends HTMLElement{static get observedAttributes(){return Object.keys(r)}attributeChangedCallback(n,t,e){n!==t&&(this[n]=e,this.render())}constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){this.render()}render(){this.shadowRoot&&(this.shadowRoot.innerHTML=`\n        <style>${o.A}</style>  \n        <section id="main-card">\n          <div class="image-container">\n            <img class="image" src="${this.image}" alt="image">\n          </div>\n          <div class="info-container">\n            <h1>${this.name||"No name"}</h1>\n            <p>${this.status||"No status"}</p>\n            <p>${this.species||"No specie"}</p>\n            <p>${this.type||"No type"}</p>\n            <p>${this.origin||"No origin"}</p>\n            <p>${this.nameoffirstepisode||"No episode"}</p>\n          </div>\n        </section>\n      `)}}customElements.define("characters-card",i);const a=n=>{return t=void 0,e=void 0,o=function*(){try{return yield fetch("https://rickandmortyapi.com/api/character/"+n).then((n=>n.json()))}catch(n){console.error(n)}},new((r=void 0)||(r=Promise))((function(n,i){function a(n){try{c(o.next(n))}catch(n){i(n)}}function s(n){try{c(o.throw(n))}catch(n){i(n)}}function c(t){var e;t.done?n(t.value):(e=t.value,e instanceof r?e:new r((function(n){n(e)}))).then(a,s)}c((o=o.apply(t,e||[])).next())}));var t,e,r,o};var s=e(647),c=function(n,t,e,r){return new(e||(e=Promise))((function(o,i){function a(n){try{c(r.next(n))}catch(n){i(n)}}function s(n){try{c(r.throw(n))}catch(n){i(n)}}function c(n){var t;n.done?o(n.value):(t=n.value,t instanceof e?t:new e((function(n){n(t)}))).then(a,s)}c((r=r.apply(n,t||[])).next())}))};class d extends HTMLElement{constructor(){super(),this.cards=[],this.dataApi=[],this.attachShadow({mode:"open"})}connectedCallback(){return c(this,void 0,void 0,(function*(){this.render()}))}fetchCharacters(n){return c(this,void 0,void 0,(function*(){this.dataApi=[];for(let t=1;t<n+1;t++){const n=yield a(t);this.dataApi.push(n),console.log(this.dataApi)}this.cards=[],this.createCardsRickandMorty(),this.render()}))}createCardsRickandMorty(){this.dataApi.forEach((n=>{const t=this.ownerDocument.createElement("characters-card");t.setAttribute(r.image,n.image),t.setAttribute(r.name,n.name),t.setAttribute(r.status,n.status),t.setAttribute(r.species,n.species),t.setAttribute(r.type,n.type),t.setAttribute(r.origin,n.origin.name),t.setAttribute(r.nameoffirstepisode,n.episode[0]),this.cards.push(t)}))}render(){var n,t;if(this.shadowRoot){this.shadowRoot.innerHTML=`\n       <style>${s.A}</style> \n        <section id="main-container">\n                    <h1>Rick and Morty Characters</h1>\n\n                    <section id="input-container">\n                        <input class="card-input" type="number" id="characterCount" placeholder="Write a number" />\n                        <button class="card-button" id="fetchButton">Spawn characters!</button>\n                    </section>\n\n                    <section id="cardsContainer"></section>\n                </section>\n\n      `;const e=null===(n=this.shadowRoot)||void 0===n?void 0:n.querySelector("#fetchButton");null==e||e.addEventListener("click",(()=>{var n;const t=null===(n=this.shadowRoot)||void 0===n?void 0:n.querySelector("#characterCount"),e=parseInt(t.value);e&&e>0&&this.fetchCharacters(e)}));const r=null===(t=this.shadowRoot)||void 0===t?void 0:t.querySelector("#cardsContainer");this.cards.forEach((n=>{null==r||r.appendChild(n)}))}}}customElements.define("app-container",d)})();